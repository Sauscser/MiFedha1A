type SMAccount
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update, create] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  @key(fields: ["phonecontact"])
  {
  nationalid: ID!
  name: String!
  phonecontact: String!
  awsemail: String!
  balance: Float!
  pw: String!

  loanAcceptanceCode: String!

  ttlDpstSM: Float!
  TtlWthdrwnSM: Float!


  TtlActvLonsTmsLnrCov: Float!
  TtlActvLonsTmsLneeCov: Float!
  TtlActvLonsAmtLnrCov: Float!
  TtlActvLonsAmtLneeCov: Float!
  TtlBLLonsTmsLnrCov: Float!
  TtlBLLonsTmsLneeCov: Float!
  TtlBLLonsAmtLnrCov: Float!
  TtlBLLonsAmtLneeCov: Float!
  TtlClrdLonsTmsLnrCov: Float!
  TtlClrdLonsTmsLneeCov: Float!
  TtlClrdLonsAmtLnrCov: Float!
  TtlClrdLonsAmtLneeCov: Float!
  
  TtlActvLonsTmsLneeChmCov: Float!
  TtlActvLonsAmtLneeChmCov: Float!
  TtlBLLonsTmsLneeChmCov: Float!
  TtlBLLonsAmtLneeChmCov: Float!
  TtlClrdLonsTmsLneeChmCov: Float!
  TtlClrdLonsAmtLneeChmCov: Float!
     
  TtlActvLonsTmsSllrCov: Float!
  TtlActvLonsTmsByrCov: Float!
  TtlActvLonsAmtSllrCov: Float!
  TtlActvLonsAmtByrCov: Float!
  TtlBLLonsTmsSllrCov: Float!
  TtlBLLonsTmsByrCov: Float!
  TtlBLLonsAmtSllrCov: Float!
  TtlBLLonsAmtByrCov: Float!
  TtlClrdLonsTmsSllrCov: Float!
  TtlClrdLonsTmsByrCov: Float!
  TtlClrdLonsAmtSllrCov: Float!
  TtlClrdLonsAmtByrCov: Float!
  

  TtlActvLonsTmsLnrNonCov: Float!
  TtlActvLonsTmsLneeNonCov: Float!
  TtlActvLonsAmtLnrNonCov: Float!
  TtlActvLonsAmtLneeNonCov: Float!
  TtlBLLonsTmsLnrNonCov: Float!
  TtlBLLonsTmsLneeNonCov: Float!
  TtlBLLonsAmtLnrNonCov: Float!
  TtlBLLonsAmtLneeNonCov: Float!
  TtlClrdLonsTmsLnrNonCov: Float!
  TtlClrdLonsTmsLneeNonCov: Float!
  TtlClrdLonsAmtLnrNonCov: Float!
  TtlClrdLonsAmtLneeNonCov: Float!
  
  TtlActvLonsTmsLneeChmNonCov: Float!
  TtlActvLonsAmtLneeChmNonCov: Float!
  TtlBLLonsTmsLneeChmNonCov: Float!
  TtlBLLonsAmtLneeChmNonCov: Float!
  TtlClrdLonsTmsLneeChmNonCov: Float!
  TtlClrdLonsAmtLneeChmNonCov: Float!
  
  TtlActvLonsTmsSllrNonCov: Float!
  TtlActvLonsTmsByrNonCov: Float!
  TtlActvLonsAmtSllrNonCov: Float!
  TtlActvLonsAmtByrNonCov: Float!
  TtlBLLonsTmsSllrNonCov: Float!
  TtlBLLonsTmsByrNonCov: Float!
  TtlBLLonsAmtSllrNonCov: Float!
  TtlBLLonsAmtByrNonCov: Float!
  TtlClrdLonsTmsSllrNonCov: Float!
  TtlClrdLonsTmsByrNonCov: Float!
  TtlClrdLonsAmtSllrNonCov: Float!
  TtlClrdLonsAmtByrNonCov: Float!

  ttlNonLonsRecSM: Float!
  ttlNonLonsSentSM:Float!

  ttlNonLonsRecChm: Float!
  ttlNonLonsSentChm:Float!

  MaxTymsBL: Float!

  loanStatus: Status!
  acStatus: Status!
  blStatus: Status!
  loanLimit: Float!
  nonLonLimit:Float!
  withdrawalLimit: Float!
  depositLimit: Float!
  owner: String!
}

type SMLoansCovered
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
    ]
  )
  {
  id: ID!
  loaneeid: String!
  loaneePhn: String!
  loanerPhn:String!
  loanerId: String!
  
  amountgiven: Float!
  amountexpected: Float!
  amountrepaid: Float!
  lonBala:Float!

  repaymentPeriod: Int!
  advregnu: String!

  description: String
  status: Status!
  owner: String!
}

type SMLoansNonCovered
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
    ]
  )
  {
  id: ID!
  loaneePhn: String!
  loanerPhn:String!
  loaneeid: ID!
  loanerId: String!
  amountgiven: Float!
  amountexpected: Float!
  amountrepaid: Float!
  lonBala:Float!

  repaymentPeriod: Int!

  description: String
  status: Status!
  owner: String!
}

type NonLoans
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, create]
      }
      {
        allow: groups
        groups: ["CountyAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["BranchAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, create] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  
  {
  id: ID!
  senderPhn: String!
  recPhn: String!
  amount: Float!
  description: String
  status:Status!
  owner: String!
}



type Agent
  @model
  @auth(
    rules: [
      { allow: private, operations: [read, update] }
      { allow: owner, operations: [read, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      { allow: groups, groups: ["RegionalAdminTwo"], operations: [read] }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      { allow: groups, groups: ["KFKubwa"], operations: [read, create, update] }
      { allow: groups, groups: ["KFNdogo"], operations: [read, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  @key(fields: ["phonecontact"])
  {
  phonecontact: ID!
  nationalid: String!
  name: String!
  ttlEarnings: Float!
  pw: String!
  email: String!
  sagentregno: String!
  TtlFltIn: Float!
  TtlFltOut: Float!
  floatBal: Float!
  latitude: Float!
  longitude: Float!
  agentEarningBal: Float!
  status: Status!
  owner: String!
}

type FloatPurchase
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["BankAdmin"], operations: [create, read] }
      { allow: groups, groups: ["KFNdogo "], operations: [create, update, read] }
      { allow: owner, operations: [read, update] }
      { allow: private, operations: [read, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: private, operations: [read, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  {
  id: ID
  agentphone: String!
  amount: Float!
  transactId: String!
  bankAdminID: String!
  status: Status!
  owner: String!
}

type FloatAdd
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read] }
      { allow: private, operations: [read, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["KFNdogo "], operations: [read] }
    ]
  )
  {
  id: ID!
  withdrawerid: String!
 
  amount: Float!
  agentPhonecontact: String!

  sagentId: String!
  status: Status!
  owner: String!
}

type FloatReduction
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: owner, operations: [create, read, update] }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["KFNdogo "], operations: [read, create] }
      { allow: private, operations: [create, read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  {
  id: ID!
  amount: Float!
  depositerid: String!
  agContact: String!
  status: Status!
}

type AgentWithdrawals
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update, create] }
      { allow: private, operations: [create, read] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BankAdmin"], operations: [read, create] }
      { allow: groups, groups: ["KFNdogo "], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
 {
  id: ID!
  agentPhone: String!
  
  bankAdminId: String!
  Amount: Float!
  status: Status!
  owner: String!
}

type SAgent
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      { allow: owner, operations: [read, update] }
      { allow: private, operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["KFNdogo "], operations: [read, update] }
      { allow: private, operations: [read, update] }
      { allow: owner, operations: [read, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      ]
  )

  @key(fields: ["saPhoneContact"])
   {
  saPhoneContact: String!
  saNationalid: String!
  name: String!
  
  pw: String!
  TtlEarnings: Float!
  actvMFNdog: Float!
  InctvMFNdog: Float!
  email: String!
  saBalance: Float!
  status: Status!
  owner: String!
}

type SAgentWithdrawals
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, create] }
      
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BankAdmin"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  {
  id: ID!

  saId: String!
  amount: Float!
  bankAdmnId: String!
  status: Status!
  owner: String!
}

type BankAdmin
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      
      { allow: private, operations: [read, update, create] }
      {
        allow: groups
        groups: ["AdminOneTwo"]
        operations: [read, update, create]
      }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      { allow: owner, operations: [read, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      {
        allow: groups
        groups: ["KFNdogo"]
        operations: [read, update]
      }
      {
        allow: groups
        groups: ["Advocate"]
        operations: [read, update]
      }
      {
        allow: groups
        groups: ["KFKubwa"]
        operations: [read, update]
      }
    ]
  )
  @key(fields: ["nationalid"]) {
  nationalid: ID!
  name: String!
  phonecontact: String!
  TtlEarnings: Float!
  pw: String!
  BankAdmBal: Float!
  email: String!
  status: Status!
  owner: String!
}

type BankAdmWithdrawals
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["BankAdmin"], operations: [read, create] }
      { allow: owner, operations: [read] }
    ]
  )
  {
  id: ID!

  bankAdmNatId: String!
  amount: Float!
  status: Status!
  owner: String!
}

type Advocate
  @model
  @auth(
    rules: [
      { allow: private, operations: [read, update] }
      { allow: owner, operations: [read, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      {
        allow: groups
        groups: ["Advocate"]
        operations: [create, update, read]
      }
    ]
  )
  @key(fields: ["advregnu"]) {
  advregnu: ID!
  nationalid: String!
  pwd: String!
  name: String!
  phonecontact: String!
  TtlEarnings: Float!
  advBal: Float!
  email: String!
  officeLoc: String!
  status: Status!
  owner: String!
}

type AdvocateWithdrawals
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["BankAdmin"], operations: [create, read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: owner, operations: [read, create] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["Advocate"], operations: [read, create] }
    ]
  )
  {
  id: ID!
  bankAdmnId: String!
  advregnu: String!
  amount: Float!

  status: Status!
  owner: String!
}

type Company
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: private, operations: [read, update] }
    ]
  )
  @key(fields: ["AdminId"])
  {
  AdminId: String!
  phoneContact: String!
  companyEmail: String!
  termsNconditions: String!
  alert: String!
  about: String!
  policy: String!
  privacy: String!
  recom: String!
  pw1: String!
  pw2: String!

  agentwithdrawalFee: Float!
  agentCom: Float!
  sagentCom: Float!
  companyCom: Float!
  AdvCom: Float!
  bankAdminCom: Float!
  sawithdrawalFee: Float!
  advuserwithdrawalFee: Float!
  bankAdmuserwithdrawalFee: Float!
  userLoanTransferFee: Float!
  userTransferFee: Float!
  userClearanceFee: Float!
  CoverageFee: Float!

  ttlNonLonssRecSM: Float!
  ttlNonLonssSentSM:Float!

  ttlNonLonssRecChm: Float!
  ttlNonLonssSentChm:Float!

  companyEarningBal: Float!
  companyEarning: Float!
  agentEarningBal: Float!
  agentEarning: Float!
  saEarningBal: Float!
  saEarning: Float!
  AdvEarningBal: Float!
  AdvEarning: Float!
  admEarningBal: Float!
  admEarning: Float!

  ttlUsrDep: Float!
  ttlUserWthdrwl: Float
  agentFloatIn: Float!
  agentFloatOut: Float!
  ttlActiveUsers: Float!
  ttlInactvUsrs: Float!
  ttlActiveChm: Float!
  ttlInactvChm: Float!
  ttlActiveChmUsers: Float!
  ttlInactvChmUsrs: Float!


  
  ttlKFNdgActv: Float!
  ttlKFNdgInActv: Float!
  ttlKNdgBLStts: Float!
  ttlKFKbwActv: Float!
  ttlKFKbwInActv: Float!
  ttlKKbwBLStts: Float!
  ttlKFAdvActv: Float!
  ttlKFAdvInActv: Float!
  ttlKAdvBLStts: Float!
  ttlKFAdmActv: Float!
  ttlKFAdmInActv: Float!
  ttlKAdmBLStts: Float!

  ttlSMLnsInAmtCov: Float!
  ttlChmLnsInAmtCov: Float!
  ttlSellerLnsInAmtCov: Float!
  ttlSMLnsInActvAmtCov: Float!
  ttlChmLnsInActvAmtCov: Float!
  ttlSellerLnsInActvAmtCov: Float!
  ttlSMLnsInClrdAmtCov: Float!
  ttlChmLnsInClrdAmtCov: Float!
  ttlSellerLnsInClrdAmtCov: Float!
  ttlSMLnsInBlAmtCov: Float!
  ttlChmLnsInBlAmtCov: Float!
  ttlSellerLnsInBlAmtCov: Float!
  
  ttlSMLnsInTymsCov: Float!
  ttlChmLnsInTymsCov: Float!
  ttlSellerLnsInTymsCov: Float!
  ttlSMLnsInActvTymsCov: Float!
  ttlChmLnsInActvTymsCov: Float!
  ttlSellerLnsInActvTymsCov: Float!
  ttlSMLnsInClrdTymsCov: Float!
  ttlChmLnsInClrdTymsCov: Float!
  ttlSellerLnsInClrdTymsCov: Float!
  ttlSMLnsInBlTymsCov: Float!
  ttlChmLnsInBlTymsCov: Float!
  ttlSellerLnsInBlTymsCov: Float!
  
  ttlCompTrnsfrEarningsCov: Float!
  ttlCompBLClrncEarningsCov: Float!

  ttlSMLnsInAmtNonCov: Float!
  ttlChmLnsInAmtNonCov: Float!
  ttlSellerLnsInAmtNonCov: Float!
  ttlSMLnsInActvAmtNonCov: Float!
  ttlChmLnsInActvAmtNonCov: Float!
  ttlSellerLnsInActvAmtNonCov: Float!
  ttlSMLnsInClrdAmtNonCov: Float!
  ttlChmLnsInClrdAmtNonCov: Float!
  ttlSellerLnsInClrdAmtNonCov: Float!
  ttlSMLnsInBlAmtNonCov: Float!
  ttlChmLnsInBlAmtNonCov: Float!
  ttlSellerLnsInBlAmtNonCov: Float!
  
  ttlSMLnsInTymsNonCov: Float!
  ttlChmLnsInTymsNonCov: Float!
  ttlSellerLnsInTymsNonCov: Float!
  ttlSMLnsInActvTymsNonCov: Float!
  ttlChmLnsInActvTymsNonCov: Float!
  ttlSellerLnsInActvTymsNonCov: Float!
  ttlSMLnsInClrdTymsNonCov: Float!
  ttlChmLnsInClrdTymsNonCov: Float!
  ttlSellerLnsInClrdTymsNonCov: Float!
  ttlSMLnsInBlTymsNonCov: Float!
  ttlChmLnsInBlTymsNonCov: Float!
  ttlSellerLnsInBlTymsNonCov: Float!
  
  ttlCompTrnsfrEarningsNonCov: Float!
  ttlCompBLClrncEarningsNonCov: Float!
  ttlCompCovEarnings: Float!

  maxInterestSM: Float!
  maxInterestCredSllr: Float!
  maxInterestGrp: Float!

  maxMFNdogos:Float!


  totalLnsRecovered: Float!
}

type CovCreditSeller
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
    ]
  )
  {
  id: ID!
  itemName: String!
  itemSerialNumber: String
  buyerContact: String!
  sellerContact: String!
  buyerID: String!
  sellerID: String!
  amountSold: Float!
  amountexpectedBack: Float!
  amountRepaid: Float!
  repaymentPeriod: Int!
  lonBala:Float!
  description: String
  status: Status!
  advregnu: String!
  
  owner: String!
}

type NonCovCreditSeller
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
    ]
  )
  {
  id: ID!
  itemName: String!
  itemSerialNumber: String
  buyerContact: String!
  sellerContact: String!
  buyerID: String!
  sellerID: String!
  amountSold: Float!
  amountexpectedBack: Float!
  amountRepaid: Float!
  lonBala:Float!
  repaymentPeriod: Int!
  description: String

  status: Status!
  owner: String!
}

type Group
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  @key(fields: ["grpContact"])
  {
  grpContact: ID!
  signitoryContact: String!
  SignitoryNatid: String!
  signitoryName: String!
  grpName: String!
  signitoryPW: String!
  grpEmail: String!
  grpBal: Float!
  ttlGrpMembers: Float!
  description: String

  ttlNonLonsRecChm: Float!
  ttlNonLonsSentChm:Float!

  ttlDpst: Float!
  ttlWthdrwn: Float!

  TtlActvLonsTmsLnrChmCov: Float!
  TtlActvLonsAmtLnrChmCov: Float!
  TtlBLLonsTmsLnrChmCov: Float!
  TtlBLLonsAmtLnrChmCov: Float!
  TtlClrdLonsTmsLnrChmCov: Float!
  TtlClrdLonsAmtLnrChmCov: Float!

  TtlActvLonsTmsLnrChmNonCov: Float!
  TtlActvLonsAmtLnrChmNonCov: Float!
  TtlBLLonsTmsLnrChmNonCov: Float!
  TtlBLLonsAmtLnrChmNonCov: Float!
  TtlClrdLonsTmsLnrChmNonCov: Float!
  TtlClrdLonsAmtLnrChmNonCov: Float!
  
  status: Status!
  owner: String!
}

type GrpMembers
  @model
  @auth(
    rules: [
      { allow: owner, operations: [read, update] }
      { allow: private, operations: [create, read] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  {
  id: ID!
  groupContact: String!
  memberContact: String!
  memberNatId: String!
  acBal: Float!
  AcStatus: Status!
  loanStatus: Status!
  blStatus: Status!
  owner: String!
}

type CvrdGroupLoans
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
    ]
  )
  {
  id: ID!
  grpContact: String!
  loaneePhn: String!
  repaymentPeriod: Int!
  amountGiven: Float!
  amountExpectedBack: Float!
  amountRepaid: Float!
  description: String
  lonBala:Float!
  advRegNu: String!
  
  status: Status!
  owner: String!
}

type NonCvrdGroupLoans
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
    ]
  )
  {
  id: ID!
  grpContact: String!
  loaneePhn: String!
  repaymentPeriod: Int!
  amountGiven: Float!
  amountExpectedBack: Float!
  amountRepaid: Float!
  description: String
  
  lonBala:String!
  status: Status!
  owner: String!
}

type GroupNonLoans
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["Advocate"], operations: [read] }
    ]
  )
  {
  id: ID!
  grpContact: String!
  recipientPhn: String!

  amountSent: Float!

  description: String

  status: Status!
  owner: String!
}

type GrpMembersContribution
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update] }
      { allow: private, operations: [read, create, update] }
      {
        allow: groups
        groups: ["AdminOne"]
        operations: [read, create, update, delete]
      }
      { allow: groups, groups: ["AdminOneTwo"], operations: [read, update] }
      {
        allow: groups
        groups: ["RegionalAdmin"]
        operations: [read, create, update]
      }
      {
        allow: groups
        groups: ["RegionalAdminTwo"]
        operations: [read, update]
      }
      { allow: groups, groups: ["CountyAdmin"], operations: [read, update] }
      { allow: groups, groups: ["CountyAdminTwo"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdmin"], operations: [read, update] }
      { allow: groups, groups: ["BranchAdminTwo"], operations: [read] }
      {
        allow: groups
        groups: ["Executive"]
        operations: [read, create, update, delete]
      }
    ]
  )
  {
  id: ID!
  memberPhn: String!

  grpContact: String!
  contriAmount: Float!
  status: Status!
  owner: String!
}

enum Status {
  NoLoan
  LoanActive
  LoanInActive
  LoanCleared
  LoanBL
  AccountActive
  AccountInactive
  AccountBlackListed
  AccountNotBL
  NonLons
  SMCovLonRepayment
  SMNonCovLonRepayment
  ChmCovLonRepayment
  ChmNonCovLonRepayment
  CredSlCovLonRepayment
  CredSlNonCovLonRepayment
}
